// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountType {
  TOURIST
  AGENCY
}

model Account {
  id              String         @id @default(uuid())
  email           String         @unique
  hashedPassword  String?
  isEmailVerified Boolean        @default(false)
  refreshTokens   RefreshTokens? @relation(fields: [refreshTokenId], references: [id])
  refreshTokenId  String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  accountType     AccountType    @default(TOURIST)
  Tourist         Tourist[]
  Agency          Agency[]

  @@map("account")
}

model RefreshTokens {
  id                     String    @id @default(uuid())
  hashedToken            String
  expiresAt              DateTime
  operatingSystem        String?
  browser                String?
  device                 String?
  agent                  String?
  refreshTokenIdentifier String    @unique
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
  Account                Account[]

  @@map("refresh_tokens")
}

model Tourist {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Account   Account  @relation(fields: [accountId], references: [id])
  accountId String

  @@map("tourist")
}

enum StatusType {
  PENDING
  APPROVED
  REJECTED
}

model Agency {
  id           String     @id @default(uuid())
  agencyName   String
  email        String     @unique
  phoneNumber  String     @unique
  agencyAvatar String?
  country      String
  city         String
  address      String?
  status       StatusType @default(APPROVED)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  Account      Account    @relation(fields: [accountId], references: [id])
  accountId    String

  @@map("tour_company")
}
